version: '3'
services:
  frontend:
    container_name: page
    command: dev
    build: ./frontend
    volumes:
      - ./frontend/src:/frontend/src
      - ./frontend/public:/frontend/public
      - ./frontend/.next:/frontend/.next
      - ./frontend/next.config.js:/frontend/next.config.js
    ports:
      - 3000:3000
    environment:
      - API_HOST=backend
      - API_PROTOCOL=http
      - API_PORT=3001
      - URL_BASE=$API_PROTOCOL://$API_HOST:$API_PORT/api/
    tty: true
    stdin_open: true
    restart: always
    depends_on:
      - backend
  backend:
    container_name: api
    command: dev
    build: ./backend
    volumes:
      - ./backend/src:/backend/src
    working_dir: /backend
    depends_on:
      - db
    environment:
      PGPASSWORD: password
      PGUSER: root
      PGDATABASE: company
      PGPORT: 5432
      PGHOST: db
    ports:
      - 3001:3001
    tty: true
    stdin_open: true
    restart: always
  db:
    image: postgres
    volumes:
      - ./sql/migrations/01-create-table.sql:/docker-entrypoint-initdb.d/01-create-table.sql
      - ./sql/seeders/02-seed-table.sql:/docker-entrypoint-initdb.d/02-seed-table.sql
    shm_size: 128mb
    container_name: database
    platform: linux/x86_64
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: root
      POSTGRES_DB: company